"import objectAssign from 'object-assign'\n\nimport Vue from 'vue'\n\nimport App from './App'\n\nimport Vuex from 'vuex'\nimport vuexI18n from 'vuex-i18n'\n\nimport { sync } from 'vuex-router-sync'\nimport vuxLocales from './locales/all.yml'\nimport componentsLocales from './locales/components.yml'\nimport router from './router/index'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport { far } from '@fortawesome/free-regular-svg-icons'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { FontAwesomeIcon, FontAwesomeLayers, FontAwesomeLayersText } from '@fortawesome/vue-fontawesome'\nimport VueBus from 'vue-bus'\n\nlibrary.add(fas, far, fab)\nVue.component('font-awesome-icon', FontAwesomeIcon)\nVue.component('font-awesome-layers', FontAwesomeLayers)\nVue.component('font-awesome-layers-text', FontAwesomeLayersText)\n\nVue.use(Vuex)\nVue.use(VueBus)\nrequire('es6-promise').polyfill()\n\n/** i18n **/\nlet store = new Vuex.Store({\nmodules: {\ni18n: vuexI18n.store\n}\n})\n\nVue.use(vuexI18n.plugin, store)\n\nif (/no-background-color=true/.test(location.href)) {\ndocument.body.style['background-color'] = '#fff'\n}\n\n\nconst shouldUseTransition = !/transition=none/.test(location.href)\n\nconst finalLocales = {\n'en': objectAssign(vuxLocales['en'], componentsLocales['en']),\n'zh-CN': objectAssign(vuxLocales['zh-CN'], componentsLocales['zh-CN'])\n}\n\nfor (let i in finalLocales) {\nVue.i18n.add(i, finalLocales[i])\n}\n\nimport Group from './components/group/index.vue'\nimport Cell from './components/cell/index.vue'\nimport DatetimePlugin from './plugins/datetime/index.js'\nimport CloseDialogsPlugin from './plugins/close-dialogs/index.js'\nimport ConfigPlugin from './plugins/config/index.js'\nimport BusPlugin from './plugins/bus/index.js'\nimport LocalePlugin from './plugins/locale/index.js'\nimport DevicePlugin from './plugins/device/index.js'\nimport ToastPlugin from './plugins/toast/index.js'\nimport AlertPlugin from './plugins/alert/index.js'\nimport ConfirmPlugin from './plugins/confirm/index.js'\nimport LoadingPlugin from './plugins/loading/index.js'\nimport WechatPlugin from './plugins/wechat/index.js'\nimport AjaxPlugin from './plugins/ajax/index.js'\nimport AppPlugin from './plugins/app/index.js'\n\n\nVue.component('group', Group)\nVue.component('cell', Cell)\n\nVue.use(LocalePlugin)\nconst nowLocale = Vue.locale.get()\nif (/zh/.test(nowLocale)) {\nVue.i18n.set('zh-CN')\nVue.locale.set('zh-CN')\n} else {\nVue.i18n.set('en')\nVue.locale.set('en')\n}\nVue.i18n.set('en')\nVue.locale.set('en')\nstore.registerModule('vux', {\nstate: {\ndemoScrollTop: 0,\nisLoading: false,\ndirection: shouldUseTransition ? 'forward' : ''\n},\nmutations: {\nupdateDemoPosition (state, payload) {\nstate.demoScrollTop = payload.top\n},\nupdateLoadingStatus (state, payload) {\nstate.isLoading = payload.isLoading\n},\nupdateDirection (state, payload) {\nif (!shouldUseTransition) {\nreturn\n}\nstate.direction = payload.direction\n}\n},\nactions: {\nupdateDemoPosition ({commit}, top) {\ncommit({type: 'updateDemoPosition', top: top})\n}\n}\n})\n\n\nVue.use(ConfigPlugin, {\n$layout: 'VIEW_BOX' \n})\n\n\nVue.use(DevicePlugin)\nVue.use(ToastPlugin)\nVue.use(AlertPlugin)\nVue.use(ConfirmPlugin)\nVue.use(LoadingPlugin)\nVue.use(WechatPlugin)\nVue.use(AjaxPlugin)\nVue.use(BusPlugin)\nVue.use(DatetimePlugin)\n\n\nif (process.env.platform === 'app') {\nVue.use(AppPlugin, store)\n}\n\n/**\n* -------------------------- 微信分享 ----------------------\n* 请不要直接复制下面代码\n*/\n\nconst FastClick = require('fastclick')\nFastClick.attach(document.body)\n\n\n\n\n\n\n\n\nVue.use(CloseDialogsPlugin, router)\n\nsync(store, router)\n\n\nconst history = window.sessionStorage\nhistory.clear()\nlet historyCount = history.getItem('count') * 1 || 0\nhistory.setItem('/', 0)\nlet isPush = false\nlet endTime = Date.now()\nlet methods = ['push', 'go', 'replace', 'forward', 'back']\n\ndocument.addEventListener('touchend', () => {\nendTime = Date.now()\n})\nmethods.forEach(key => {\nlet method = router[key].bind(router)\nrouter[key] = function (...args) {\nisPush = true\nmethod.apply(null, args)\n}\n})\n\nrouter.beforeEach(function (to, from, next) {\nstore.commit('updateLoadingStatus', {isLoading: true})\n\nconst toIndex = history.getItem(to.path)\nconst fromIndex = history.getItem(from.path)\n\nif (toIndex) {\nif (!fromIndex || parseInt(toIndex, 10) > parseInt(fromIndex, 10) || (toIndex === '0' && fromIndex === '0')) {\nstore.commit('updateDirection', {direction: 'forward'})\n} else {\n\nif (!isPush && (Date.now() - endTime) < 377) {\nstore.commit('updateDirection', {direction: ''})\n} else {\nstore.commit('updateDirection', { direction: 'reverse' })\n}\n}\n} else {\n++historyCount\nhistory.setItem('count', historyCount)\nto.path !== '/' && history.setItem(to.path, historyCount)\nstore.commit('updateDirection', {direction: 'forward'})\n}\n\nif (/\\/http/.test(to.path)) {\nlet url = to.path.split('http')[1]\nwindow.location.href = `http${url}`\n} else {\nnext()\n}\n})\n\nrouter.afterEach(function (to) {\nisPush = false\nstore.commit('updateLoadingStatus', {isLoading: false})\nif (process.env.NODE_ENV === 'production') {\nga && ga('set', 'page', to.fullPath)\nga && ga('send', 'pageview')\n}\n})\n\nnew Vue({\nstore,\nrouter,\nrender: h => h(App)\n}).$mount('#app')\n"